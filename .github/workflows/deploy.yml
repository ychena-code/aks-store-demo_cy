name: Build and Deploy to AKS

on:
  push:
    branches:
      - main

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER_NAME --overwrite-existing

    - name: Build and push order-service image
      run: |
        docker build -t $ACR_LOGIN_SERVER/order-service:latest ./src/order-service
        az acr login --name ${{ secrets.ACR_NAME }}
        docker push $ACR_LOGIN_SERVER/order-service:latest

    - name: Build and push product-service image
      run: |
        docker build -t $ACR_LOGIN_SERVER/product-service:latest ./src/product-service
        docker push $ACR_LOGIN_SERVER/product-service:latest

    - name: Build and push store-front image
      run: |
        docker build -t $ACR_LOGIN_SERVER/store-front:latest ./src/store-front
        docker push $ACR_LOGIN_SERVER/store-front:latest

    - name: Replace image placeholders in YAML
      run: |
        find k8s/ -type f -name "*.yaml" -exec sed -i "s|<ACR_LOGIN_SERVER>|$ACR_LOGIN_SERVER|g" {} \;

    - name: Deploy to AKS
      run: |
        kubectl apply -f k8s/order-service/
        kubectl apply -f k8s/product-service/
        kubectl apply -f k8s/store-front/

    - name: Verify deployments rollout status
      run: |
        kubectl rollout status deployment/order-service
        kubectl rollout status deployment/product-service
        kubectl rollout status deployment/store-front
