name: Deploy to AKS with Managed Identity

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  ACR_NAME: "cyacrtest"          # 替换为您的 ACR 名称
  AKS_NAME: "CYAKS"                   # AKS 集群名
  RESOURCE_GROUP: "rg-ext-k8s"        # AKS 资源组
  MANAGED_IDENTITY_CLIENT_ID: ${{ secrets.MANAGED_IDENTITY_CLIENT_ID }}  # 托管身份的 Client ID

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # 必需，用于 OIDC 身份验证
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}      # 托管身份的 Client ID
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Log in to ACR
      run: |
        az acr login --name ${{ env.ACR_NAME }}

    - name: Build and push images
      run: |
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/frontend:latest -f Dockerfile.frontend .
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/product:latest -f Dockerfile.product .
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/order:latest -f Dockerfile.order .
        
        docker push ${{ env.ACR_NAME }}.azurecr.io/frontend:latest
        docker push ${{ env.ACR_NAME }}.azurecr.io/product:latest
        docker push ${{ env.ACR_NAME }}.azurecr.io/order:latest

    - name: Get AKS credentials
      run: |
        az aks get-credentials \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --name ${{ env.AKS_NAME }} \
          --overwrite-existing

    - name: Deploy to AKS
      run: |
        kubectl apply -f manifests/
